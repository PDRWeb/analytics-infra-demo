services:
  data-validator:
    build: ./src
    container_name: data-validator
    restart: unless-stopped
    environment:
      - DB_HOST=holding_db
      - DB_PORT=5432
      - DB_USER=${HOLDING_DB_USER}
      - DB_PASS=${HOLDING_DB_PASS}
      - DB_NAME=${HOLDING_DB_NAME}
      - VALIDATION_INTERVAL=30
      - DEAD_LETTER_QUEUE_SIZE=1000
    networks:
      - database_db_net
      - validation_net
    volumes:
      - ./src:/app/src
      - ./schemas:/app/schemas
    depends_on:
      - holding_db
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  dead-letter-queue:
    image: postgres:15
    container_name: dead_letter_queue
    restart: unless-stopped
    environment:
      POSTGRES_USER: ${DLQ_DB_USER:-dlq_user}
      POSTGRES_PASSWORD: ${DLQ_DB_PASS:-dlq_password}
      POSTGRES_DB: ${DLQ_DB_NAME:-dead_letter_queue}
    volumes:
      - ./dlq-data:/var/lib/postgresql/data
    networks:
      - validation_net
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DLQ_DB_USER:-dlq_user} -d ${DLQ_DB_NAME:-dead_letter_queue}"]
      interval: 10s
      timeout: 5s
      retries: 5

networks:
  validation_net:
    driver: bridge
  database_db_net:
    external: true
